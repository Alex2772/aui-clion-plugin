<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <id>com.github.aui.clion</id>
    <name>AUI framework support for CLion</name>
    <vendor>alex2772</vendor>

    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.lang</depends>
    <depends>com.intellij.clion</depends>
    <depends>com.intellij.cidr.lang</depends>

    <resource-bundle>messages.MyBundle</resource-bundle>

    <extensions defaultExtensionNs="com.intellij">
        <projectService serviceImplementation="com.github.aui.clion.services.AUIProjectService"/>

        <directoryProjectGenerator implementation="com.github.aui.clion.project.AUIAppDirectoryProjectGenerator"/>
        <directoryProjectGenerator implementation="com.github.aui.clion.project.AUILibraryDirectoryProjectGenerator"/>

        <internalFileTemplate name="AUI Test Suite"/>
        <internalFileTemplate name="AUI Window CPP" />
        <internalFileTemplate name="AUI Window Header" />
        <internalFileTemplate name="AUI Global Stylesheet" />

        <localInspection language="ObjectiveC"
                         displayName="Invalid color literal"
                         groupPath="C/C++"
                         groupBundle="messages.aui"
                         groupKey="group.names.aui"
                         enabledByDefault="true"
                         level="WARNING"
                         implementationClass="com.github.aui.clion.inspections.colorLiteral.AUIColorLiteralInspection"/>

        <localInspection language="ObjectiveC"
                         displayName="Unexisting asset"
                         groupPath="C/C++"
                         groupBundle="messages.aui"
                         groupKey="group.names.aui"
                         enabledByDefault="true"
                         level="ERROR"
                         implementationClass="com.github.aui.clion.inspections.assetExistence.AUIAssetExistenceInspection"/>

        <colorProvider implementation="com.github.aui.clion.gutter.AUIColorProvider"/>

        <codeInsight.lineMarkerProvider language="ObjectiveC"
                                        implementationClass="com.github.aui.clion.gutter.AUIAssetGutter" />
        <codeInsight.inlayProvider language="ObjectiveC"
                                   implementationClass="com.github.aui.clion.inlay.AUILetInlayProvider" />

<!--        <toolWindow id="AUI" secondary="false" icon="AllIcons.General.Modified" anchor="right"-->
<!--                    factoryClass="com.github.aui.clion.toolWindow.AUIPreviewToolWindowFactory" />-->
        <additionalTextAttributes scheme="Default" file="com/github/aui/clion/colors/AUIDefault.xml"/>
        <additionalTextAttributes scheme="Darcula" file="com/github/aui/clion/colors/AUIDarcula.xml"/>

        <fileType name="AUI Global Stylesheet"
                  language="ObjectiveC"
                  implementationClass="com.github.aui.clion.fileType.AUIStylesheetFileType"
                  extensions="ass.cpp"
                  fieldName="INSTANCE"/>

        <fileTypeOverrider implementation="com.github.aui.clion.fileTypeOverrider.AUIStylesheetFileTypeOverrider" />
    </extensions>

    <actions>
        <action id="AUI.NewWindowFile"
                class="com.github.aui.clion.fileTemplates.AUIWindowTemplate">
            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
        </action>
        <action id="AUI.NewAUITestSuite"
                class="com.github.aui.clion.fileTemplates.AUITestSuiteTemplate">
            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
        </action>
        <action id="AUI.NewAUIStylesheet"
                class="com.github.aui.clion.fileTemplates.AUIStylesheet">
            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
        </action>
    </actions>

    <applicationListeners>
        <listener class="com.github.aui.clion.listeners.MyProjectManagerListener"
                  topic="com.intellij.openapi.project.ProjectManagerListener"/>
    </applicationListeners>

</idea-plugin>
